{"version":3,"sources":["../src/utils.js"],"names":["instance","Utils","params","langue","staticRoot","static_root","acceptMultilangue","staticFormatDate","fr","en","verifyBoolean","debug","value","callback","value_result","call","msg","type","info","console","dir","Error","table","warn","log","String","isNaN","Array","isArray","array","is_array","index","length","item","format","moment","parent","options","$","owlCarousel","self","options_default","selector","flatpickr","options_defaults","enableTime","altInput","time_24hr","altFormat"],"mappings":"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","file":"utils.js","sourcesContent":["let instance = null;\r\nclass Utils {\r\n\t/**\r\n\t * Constructor de la classe singleton Utils\r\n\t * @constructor\r\n\t * @param {Object} params - la liste des paramétres pour le constructor de la classe.\r\n\t * @param {String} static_root - le chemin vers le dossier sttic du projet\r\n\t */\r\n\tconstructor(params) {\r\n\t\tthis.langue = params.langue || 'fr';\r\n\t\tthis.staticRoot = params.static_root || '/static/';\r\n\t\tthis.acceptMultilangue = params.acceptMultilangue || false;\r\n\t\tthis.staticFormatDate = { fr : \"DD/MM/YYYY\", en :\"YYYY/MM/DD\" };\r\n\t\tthis.verifyBoolean(params.debug, function(value) {\r\n\t\t\tthis.debug = value;\r\n\t\t});\r\n\t\t\r\n\t\t// code pour que la classe Utils sera instancié une seule fois\r\n\t\tif(!instance){\r\n              instance = this;\r\n        }\r\n\t\treturn instance;\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie le type Boolean et sa valeur d'une maniére fiable\r\n\t * @verifyBoolean\r\n\t * @param {Boolean} value - la valeur a tester\r\n\t * @param (Function) callback - la fonction de callback qui récupere la résultat de test.\r\n\t */\r\n\tverifyBoolean(value, callback ) {\r\n\t\tvar value_result = null;\r\n\t\tif( value === false ) {\r\n\t\t\tvalue_result = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalue_result = true;\r\n\t\t}\r\n\t\tcallback.call(this, value_result);\r\n\t}\r\n\t/**\r\n\t * une fonction afficher les différents logs si le debug est true\r\n\t * @log\r\n\t * @param {String} msg - le message a afficher\r\n\t * @param (String) type - le type de messsage a afficher ( info, error, warning, dir, table, log );\r\n\t * @param (String) info - une information supplementaire a afficher dans certains type de message.\r\n\t */\r\n\tlog(msg, type, info) {\r\n\t\tif( this.debug ) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"dir\" :\r\n\t\t\t\t\tconsole.dir(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"error\" :\r\n\t\t\t\t\tthrow new Error(msg);\r\n\t\t\t\tcase \"info\" :\r\n\t\t\t\t\tconsole.info(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"table\" :\r\n\t\t\t\t\tconsole.table(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"warn\" :\r\n\t\t\t\t\tconsole.warn(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault : \r\n\t\t\t\t\tconsole.log(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie si la valeur et de type String ou pas\r\n\t * @is_string\r\n\t * @param {String} value - la valeur a tester\r\n\t */\r\n\tis_string(value) {\r\n\t\tif( typeof value === 'string' || value instanceof String ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie si la valeur et de type Number ou pas\r\n\t * @is_number\r\n\t * @param {Number} value - la valeur a tester\r\n\t */\r\n\tis_number(value) {\r\n\t\tif( typeof value === 'number' && !isNaN(value/1) ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} \r\n\t/**\r\n\t * une fonction qui vérifie si la valeur et de type Array ou pas\r\n\t * @is_Array\r\n\t * @param {Array} value - la valeur a tester\r\n\t */\r\n\tis_Array(value) {\r\n\t\treturn Array.isArray(value);\r\n\t}\r\n\t/**\r\n\t * une fonction va faire une boucle et passer les valeur de tableau sur une fonction callback\r\n\t * @forEach\r\n\t * @param {Array} array - le tableau a boucler\r\n\t * @param (Function) callback - la fonction callback qui va s'éxecuter au sein de boucle\r\n\t */\r\n\tforEach(array, callback) {\r\n\t\tif (this.is_array(array)) {\r\n\t\t\tfor (var index = 0; index < array.length; index++) {\r\n\t\t\t\tvar item = array[index];\r\n\t\t\t\tcallback.call(this, item, index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui convertir les dates selon une format donner\r\n\t * @convertDate\r\n\t * @param {String/Date} value  - la valeur a convertir\r\n\t * @param (String) format - la format voulu\r\n\t */\r\n\tconvertDate(value, format) {\r\n\t\tif(typeof moment !== \"undefined\") {\r\n\t\t\treturn moment(value, this.staticFormatDate[this.langue]).format(format);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.log(\"Merci d'include le fichier moment.js sur votre page\", \"error\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction pour ajouter un carousel baser sur OwlCarousel\r\n\t * @addCarousel\r\n\t * @param {String} parent  - le selecteur CSS du parent de carousel\r\n\t * @param (Object) options - l'objet de configuration du carousel\r\n\t */\r\n\taddCarousel (parent, options) {\r\n\t\tif(typeof $(parent).owlCarousel !== \"undefined\") {\r\n\t\t\tvar self = this;\r\n\t\t\tlet options_default = {};\r\n\t\t\tif( typeof options !== \"undefined\") {\r\n\t\t\t\toptions_default = options;\r\n\t\t\t}\r\n\t\t\t$(parent).owlCarousel(options_default);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.log(\"Merci d'include le fichier owlCarousel.js sur votre page\", \"error\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction pour ajouter un carousel baser sur OwlCarousel\r\n\t * @addCarousel\r\n\t * @param {String} parent  - le selecteur CSS du parent de carousel\r\n\t * @param (Object) options - l'objet de configuration du carousel\r\n\t */\r\n\taddDatePicker (selector, type, callback) {\r\n\t\tif(typeof flatpickr !== \"undefined\") {\r\n\t\t\tlet options_defaults = {};\r\n\t\t\tvar self = this;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase 'normal' : \r\n\t\t\t\t\toptions_defaults = {\r\n\t\t\t\t\t\tenableTime : false,\r\n\t\t\t\t\t\taltInput : true,\r\n\t\t\t\t\t\ttime_24hr : true,\r\n\t\t\t\t\t\taltFormat: \"d/m/Y\"\r\n\t\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'time' : \r\n\t\t\t\t\toptions_defaults = {\r\n\t\t\t\t\t\tenableTime : true,\r\n\t\t\t\t\t\taltInput : true,\r\n\t\t\t\t\t\ttime_24hr : true,\r\n\t\t\t\t\t\taltFormat: \"d/m/Y\"\r\n\t\t\t\t\t};\r\n\t\t\t\tbreak;\t\r\n\t\t\t}\r\n\t\t\t$(selector).flatpickr(options_defaults);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( typeof callback !== \"undefined\" ) {\r\n\t\t\t\tcallback.call(this, selector, type);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.log(\"Merci d'include le fichier flatpickr.js sur votre page, voici le lien : https://chmln.github.io/flatpickr/\", \"error\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui afficher la structure de la classe Utils\r\n\t * @help\r\n\t */\r\n\thelp() {\r\n\t\tthis.log(\"la liste des methodes \");\r\n\t}\r\n\r\n} // class Utils"]}