{"version":3,"sources":["utils.js"],"names":["instance","Utils","params","langue","staticRoot","static_root","acceptMultilangue","staticFormatDate","fr","en","verifyBoolean","debug","value","events","rules","customEvents","map","markers","options_events","acceptInfoWindow","infosWindow","callback","value_result","call","msg","type","console","dir","Error","info","table","warn","log","String","valid","message","isNaN","email","re","test","telephone","date","moment","date_moment","isValid","Array","isArray","array","is_array","index","length","item","format","parent","options","$","owlCarousel","self","options_default","autoPlay","navigation","slideSpeed","pagination","singleItem","stopOnHover","navigationText","mouseDrag","rewindNav","items","l","Math","random","toString","substr","selector","flatpickr","options_defaults","enableTime","altInput","time_24hr","altFormat","event","event_name","split","event_selecteur","substring","call_back","bindEvent","unbind","bind","evt","preventDefault","reg","new_selector_key","trim","data","event_type","new_selector","runEvents","trigger","name","form","success","addEvent","nbr_input","find","test_passe","i","input","eq","required","rule","val","is_required","rule_accept","addErrorInput","push","pop","serialize_form","serializeArray","convertArrayToObject","object","a","apply","addClass","removeClass","inputErrorHTML","etat","remove","prepend","coordonnees","zoom","mapTypeId","google","maps","MapTypeId","ROADMAP","window","onload","cordonnees_lat_lng","LatLng","lat","lng","mapStyles","featureType","stylers","visibility","mapType","StyledMapType","center","Map","document","getElementById","mapTypes","set","setMapTypeId","layer","FusionTablesLayer","query","select","from","where","styles","polylineOptions","strokeColor","strokeWeight","suppressInfoWindows","setMap","nbr_markers","marker_data","marker","createMarker","convertObjetCords","title","icon","id","objetMarker","Marker","position","infowindow","InfoWindow","content","addListener","open","address","geocoder","Geocoder","geocode","results","status","geometry","location","toJSON","id_marker","generateID","objetTemplate","template","templateURL","Handlebars","source","html","render","get","template_compiled","compile","rendered","url","error_callback","ajax","url_ajax","data_send","JSON","stringify","cache","headers","contentType","processData","dataType","error","xhr"],"mappings":"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","file":"utils-babel.js","sourcesContent":["let instance = null;\r\nclass Utils {\r\n\t/**\r\n\t * Constructor de la classe singleton Utils\r\n\t * @constructor\r\n\t * @param {Object} params - la liste des paramétres pour le constructor de la classe.\r\n\t * @param {String} static_root - le chemin vers le dossier sttic du projet\r\n\t */\r\n\tconstructor(params) {\r\n\t\tthis.langue = params.langue || 'fr';\r\n\t\tthis.staticRoot = params.static_root || '/static/';\r\n\t\tthis.acceptMultilangue = params.acceptMultilangue || false;\r\n\t\tthis.staticFormatDate = { fr : \"DD/MM/YYYY\", en :\"YYYY/MM/DD\" };\r\n\t\tthis.verifyBoolean(params.debug, function(value) {\r\n\t\t\tthis.debug = value;\r\n\t\t});\r\n\t\tthis.events = {};\r\n\t\tthis.rules = {};\r\n\t\tthis.customEvents = {};\r\n\t\tthis.map = null;\r\n\t\tthis.markers = [];\r\n\t\tthis.options_events = {};\r\n\t\tthis.acceptInfoWindow = params.acceptInfoWindow || true;\r\n\t\tthis.infosWindow = {};\r\n\t\t// code pour que la classe Utils sera instancié une seule fois\r\n\t\tif(!instance){\r\n              instance = this;\r\n        }\r\n\t\treturn instance;\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie le type Boolean et sa valeur d'une maniére fiable\r\n\t * @verifyBoolean\r\n\t * @param {Boolean} value - la valeur a tester\r\n\t * @param (Function) callback - la fonction de callback qui récupere la résultat de test.\r\n\t */\r\n\tverifyBoolean(value, callback ) {\r\n\t\tvar value_result = null;\r\n\t\tif( value === false ) {\r\n\t\t\tvalue_result = false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalue_result = true;\r\n\t\t}\r\n\t\tcallback.call(this, value_result);\r\n\t}\r\n\t/**\r\n\t * une fonction afficher les différents logs si le debug est true\r\n\t * @log\r\n\t * @param {String} msg - le message a afficher\r\n\t * @param (String) type - le type de messsage a afficher ( info, error, warning, dir, table, log );\r\n\t */\r\n\tlog(msg, type) {\r\n\t\tif( this.debug ) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"dir\" :\r\n\t\t\t\t\tconsole.dir(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"error\" :\r\n\t\t\t\t\tthrow new Error(msg);\r\n\t\t\t\tcase \"info\" :\r\n\t\t\t\t\tconsole.info(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"table\" :\r\n\t\t\t\t\tconsole.table(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase \"warning\" :\r\n\t\t\t\t\tconsole.warn(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault : \r\n\t\t\t\t\tconsole.log(msg);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie si la valeur et de type String ou pas\r\n\t * @is_string\r\n\t * @param {String} value - la valeur a tester\r\n\t */\r\n\tis_string(value) {\r\n\t\tif( typeof value === 'string' || value instanceof String ) {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: true,\r\n\t\t\t\tmessage: null\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: \"le champs est de type text\"\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie si la valeur et de type Number ou pas\r\n\t * @is_number\r\n\t * @param {Number} value - la valeur a tester\r\n\t */\r\n\tis_number(value) {\r\n\t\tif( !isNaN(value/1) ) {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: true,\r\n\t\t\t\tmessage: null\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: \"le champ est de type number\"\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * cette fonction vérifier la valeur s'elle est de type adresse email ou pas\r\n\t * @is_email\r\n\t * @param {String} email - la valeur à vérifier.\r\n\t */\r\n\tis_email(email) {\r\n\t\tlet re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\t\tvar test = re.test(email);\r\n\t\tif( test ) {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: true,\r\n\t\t\t\tmessage: null\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: \"le champs est de type email adresse\"\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t/**\r\n\t * cette fonction vérifier la valeur s'elle est de type téléphone ou pas\r\n\t * @is_telephone\r\n\t * @param {String} telephone - la valeur à vérifier.\r\n\t */\r\n\tis_telephone(telephone) {\r\n\t\tlet re = /^((0|((\\+|00)\\d{2,3}))\\d{9,20})$/;\r\n\t\tvar test = re.test(telephone);\r\n\t\tif( test ) {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: true,\r\n\t\t\t\tmessage: null\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tmessage: \"le champs est de type téléphone numéro\"\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * cette fonction vérifier la valeur s'elle est de type téléphone ou pas\r\n\t * @is_telephone\r\n\t * @param {String} telephone - la valeur à vérifier.\r\n\t */\r\n\tis_date(date) {\r\n\t\tif( typeof moment !== \"undefined\" ) {\r\n\t\t\tvar date_moment = moment(date);\r\n\t\t\tvar test = date_moment.isValid();\r\n\t\t\tif( test ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: true,\r\n\t\t\t\t\tmessage: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalid: false,\r\n\t\t\t\t\tmessage: \"le champs est de type date\"\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.log(\"Merci d'include le fichier moment.js sur votre page\", \"error\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui vérifie si la valeur et de type Array ou pas\r\n\t * @is_Array\r\n\t * @param {Array} value - la valeur a tester\r\n\t */\r\n\tis_Array(value) {\r\n\t\treturn Array.isArray(value);\r\n\t}\r\n\t/**\r\n\t * une fonction va faire une boucle et passer les valeur de tableau sur une fonction callback\r\n\t * @forEach\r\n\t * @param {Array} array - le tableau a boucler\r\n\t * @param (Function) callback - la fonction callback qui va s'éxecuter au sein de boucle\r\n\t */\r\n\tforEach(array, callback) {\r\n\t\tif (this.is_array(array)) {\r\n\t\t\tfor (var index = 0; index < array.length; index++) {\r\n\t\t\t\tvar item = array[index];\r\n\t\t\t\tcallback.call(this, item, index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui convertir les dates selon une format donner\r\n\t * @convertDate\r\n\t * @param {String/Date} value  - la valeur a convertir\r\n\t * @param (String) format - la format voulu\r\n\t */\r\n\tconvertDate(value, format) {\r\n\t\tif(typeof moment !== \"undefined\") {\r\n\t\t\treturn moment(value, this.staticFormatDate[this.langue]).format(format);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.log(\"Merci d'include le fichier moment.js sur votre page\", \"error\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction pour ajouter un carousel baser sur OwlCarousel\r\n\t * @addCarousel\r\n\t * @param {String} parent  - le selecteur CSS du parent de carousel\r\n\t * @param (Object) options - l'objet de configuration du carousel\r\n\t */\r\n\taddCarousel (parent, options) {\r\n\t\tif(typeof $(parent).owlCarousel !== \"undefined\") {\r\n\t\t\tvar self = this;\r\n\t\t\tvar options_default = {\r\n\t\t\t\t\tautoPlay : 3000,\r\n\t\t\t\t    navigation : true,\r\n\t\t\t\t    slideSpeed : 2000,\r\n\t\t\t\t    pagination : false,\r\n\t\t\t\t    singleItem : true,\r\n\t\t\t\t    stopOnHover : true,\r\n\t\t\t\t    navigationText : ['<img src=\"'+self.staticRoot+'images/btn_right.png\" />','<img src=\"'+self.staticRoot+'images/btn_left.png\" />'],\r\n\t\t\t\t    mouseDrag : true,\r\n\t\t\t\t    rewindNav : true,\r\n\t\t\t\t\titems : 1\r\n\t\t\t\t};\r\n\t\t\tif( typeof options !== \"undefined\") {\r\n\t\t\t\toptions_default = options;\r\n\t\t\t}\r\n\t\t\t$(parent).owlCarousel(options_default);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.log(\"Merci d'include le fichier owlCarousel.js sur votre page\", \"error\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui génére un ID unique\r\n\t * @generateID\r\n\t * @param {Number} length - le niveau sur laquel la fonction peut étendue le nombre des caractére à fournir\r\n\t */\r\n\tgenerateID(l) {\r\n\t\tif(typeof l === \"undefined\") {\r\n\t\t\tl = 36;\r\n\t\t}\r\n\t\treturn Math.random().toString(l).substr(2, 10);\r\n\t}\r\n\t/**\r\n\t * une fonction pour ajouter un carousel baser sur OwlCarousel\r\n\t * @addCarousel\r\n\t * @param {String} parent  - le selecteur CSS du parent de carousel\r\n\t * @param (Object) options - l'objet de configuration du carousel\r\n\t */\r\n\taddDatePicker (selector, type, callback) {\r\n\t\tif(typeof flatpickr !== \"undefined\") {\r\n\t\t\tlet options_defaults = {};\r\n\t\t\tvar self = this;\r\n\t\t\tswitch(type) {\r\n\t\t\t\tcase 'normal' : \r\n\t\t\t\t\toptions_defaults = {\r\n\t\t\t\t\t\tenableTime : false,\r\n\t\t\t\t\t\taltInput : true,\r\n\t\t\t\t\t\ttime_24hr : true,\r\n\t\t\t\t\t\taltFormat: \"d/m/Y\"\r\n\t\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'time' : \r\n\t\t\t\t\toptions_defaults = {\r\n\t\t\t\t\t\tenableTime : true,\r\n\t\t\t\t\t\taltInput : true,\r\n\t\t\t\t\t\ttime_24hr : true,\r\n\t\t\t\t\t\taltFormat: \"d/m/Y\"\r\n\t\t\t\t\t};\r\n\t\t\t\tbreak;\t\r\n\t\t\t}\r\n\t\t\t$(selector).flatpickr(options_defaults);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( typeof callback !== \"undefined\" ) {\r\n\t\t\t\tcallback.call(this, selector, type);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.log(\"Merci d'include le fichier flatpickr.js sur votre page, voici le lien : https://chmln.github.io/flatpickr/\", \"error\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * une fonction qui éxecute les événements\r\n\t * @runEvents\r\n\t */\r\n\trunEvents () {\r\n\t\tif(this.events !== null) {\r\n\t\t\tfor( var event in this.events ) {\r\n\t\t\t\tvar event_name = event.split(\" \")[0];\r\n\t\t\t\tvar event_selecteur = event.substring(event_name.length, event.length);\r\n\t\t\t\tvar call_back = this.events[event];\r\n\t\t\t\tthis.bindEvent(event_selecteur, event_name, call_back);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction de bind pour les event DOM sur les élements de la page : cette fonction est interne et non utilisable par l'utilisateur\r\n\t * @bindEvent\r\n\t * @param {String} event - le nom de l'event\r\n\t * @param {String} selector - le selector de l'element DOM sur quoi l'event va se lancer\r\n\t * @param {String} callback - callback qui s'exécute quand l'event est exécuté\r\n\t */\r\n\tbindEvent (selector, event, callback ) {\r\n\t\tvar self = this;\r\n\t\t$(selector).unbind(event);\r\n\t\t$(selector).bind(event, function(evt) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tif( callback !== null && typeof self[callback] !== \"undefined\" ) {\r\n\t\t\t\tvar reg = /^#|^./g;\r\n\t\t\t\tvar new_selector_key = selector.trim();\r\n\t\t\t\tif( reg.test(new_selector_key) ) {\r\n\t\t\t\t\tnew_selector_key = new_selector_key.substring(1, new_selector_key.length);\r\n\t\t\t\t}\r\n\t\t\t\tvar data = self.options_events[new_selector_key];\r\n\t\t\t\tself[callback].call(this, evt, self, data);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tself.log(\"La fonction \"+callback+\" n'est pas défini dans l'objet Utils.\", \"error\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * Fonction pour ajouter un event dans le scope de l'objet Utils\r\n\t * @addEvent\r\n\t * @param {String} selector - le selector de l'element DOM sur quoi l'event va se lancer\r\n\t * @param {String} event_type - le nom de l'event\r\n\t * @param {String} callback - callback qui s'exécute quand l'event est exécuté\r\n\t */\r\n\taddEvent(selector, event_type, callback, options) {\r\n\t\tthis.events[event_type+\" \"+selector] = callback;\r\n\t\tvar reg = /^#|^./g;\r\n\t\tvar new_selector = selector.trim();\r\n\t\tif( reg.test(new_selector) ) {\r\n\t\t\tnew_selector = new_selector.substring(1, new_selector.length);\r\n\t\t}\r\n\t\tthis.options_events[new_selector] = options;\r\n\t\tthis.runEvents();\r\n\t}\r\n\t/**\r\n\t * Fonction qui supprime un event de l'objet principale et aussi de la mémoire\r\n\t * @removeEvent\r\n\t * @param {String} selector - le selector de l'element DOM sur quoi l'event va se supprimer\r\n\t */\r\n\tremoveEvent(selector) {\r\n\t\tfor( var event in this.events ) {\r\n\t\t\tvar event_name = event.split(\" \")[0];\r\n\t\t\tvar event_selecteur = event.split(\" \")[1];\r\n\t\t\tif( event_selecteur === selector ) {\r\n\t\t\t\t$(selector).unbind(event_name);\r\n\t\t\t\tdelete this.events[event_name+\" \"+event_selecteur];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction stimule l'événement pour un sélecteur donné\r\n\t * @TriggerEvent\r\n\t * @param {String} selector - le selector de l'element DOM sur quoi l'event va se simuler\r\n\t * @param {String} event - le nom de l'événement\r\n\t */\r\n\tTriggerEvent(selector, event) {\r\n\t\t$(selector).trigger(event);\r\n\t}\r\n\t/**\r\n\t * Fonction pour role de créer des evenments personnalisée\r\n\t * @addCustomEvent\r\n\t * @param {String} name - le nom de l'événement personnalisée\r\n\t * @param {Function} callback - la fonction callback returner une fonction pour l'exécuter sur le moment de l'événement personnalisée\r\n\t * @param {Object} options -  les options à passer sur le callback de l'événement personnalisée\r\n\t */\r\n\taddCustomEvent(name, callback, options) {\r\n\t\tthis.customEvents[name] = callback;\r\n\t\treturn callback.bind(this, name, options);\r\n\t}\r\n\t/**\r\n\t * Fonction pour valider un formulaire\r\n\t * @validate\r\n\t * @param {String} form - l'id de l'élement DOM\r\n\t * @param {Function} callback - la fonction callback qui s'éxécute dans le cas ou tous testes sur les champs de formulaire sont passé\r\n\t */\r\n\tvalidate(form, success) {\r\n\t\tthis.addEvent(form+\" input[type='submit']\", \"click\", \"validateForm\" , {parent: form,success: success});\r\n\t}\r\n\t/**\r\n\t * Fonction interne qui joue le rôle de callback quand tous les testes sont passé\r\n\t * @validateForm\r\n\t * @param {Object} evt - l'objet événement\r\n\t * @param {Object} self - la classe Utils\r\n\t * @param {Object} options - des options personnalisée à passer sur le callback de l'événement\r\n\t */\r\n\tvalidateForm(evt, self, options) {\r\n\t\tvar nbr_input = $(options.parent).find(\"input[data-require='true']\").length;\r\n\t\tvar test_passe = [];\r\n\t\tfor( var i = 0; i < nbr_input; i++ ) {\r\n\t\t\tvar input = $(options.parent).find(\"input[data-require='true']\").eq(i);\r\n\t\t\tvar required = $(input).data(\"require\");\r\n\t\t\tvar rule = $(input).data(\"rule\");\r\n\t\t\tvar value = $(input).val();\r\n\t\t\tif( required === true && typeof required !== \"undefined\" ) {\r\n\t\t\t\tif( self.is_required(input, \"Ce champ est obligatoire\") ) {\r\n\t\t\t\t\tif( typeof rule !== \"undefined\" ) {\r\n\t\t\t\t\t\tvar rule_accept = self[rule](value);\r\n\t\t\t\t\t\tif(rule_accept.valid) {\r\n\t\t\t\t\t\t\tself.addErrorInput(input, false, rule_accept.message);\r\n\t\t\t\t\t\t\ttest_passe.push(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tself.addErrorInput(input, true, rule_accept.message);\r\n\t\t\t\t\t\t\ttest_passe.pop();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}// for\r\n\t\tif( test_passe.length === nbr_input ) {\r\n\t\t\tvar serialize_form = $(options.parent).serializeArray();\r\n\t\t\toptions.success.call(self, self.convertArrayToObject(serialize_form));\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction interne qui joue le rôle de convertir une Array de la serialization to un object JS native\r\n\t * @convertArrayToObject\r\n\t * @param {Array} data - le tableau à convertir\r\n\t */\r\n\tconvertArrayToObject (data) {\r\n\t\tif( Array.isArray(data) ) {\r\n\t\t\tvar object = {};\r\n\t\t\tfor( var a = 0; a < data.length; a++ ) {\r\n\t\t\t\tobject[data[a].name] =  data[a].value;\r\n\t\t\t}\r\n\t\t\treturn object;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction interne qui joue le rôle de checker si la valeur de l'input est vide ou pas\r\n\t * @is_required\r\n\t * @param {Object} input - l'élément DOM de l'input\r\n\t * @param {Object} message - le message d'erreur dans le cas ou le message est échoué\r\n\t */\r\n\tis_required (input, message) {\r\n\t\tvar value = $(input).val();\r\n\t\tif( value.length > 0 && value !== null && typeof value !== \"undefined\" ) {\r\n\t\t\treturn !this.addErrorInput(input, false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn !this.addErrorInput(input, true, message);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction interne qui joue le rôle de gérer l'afficher les messages d'erreur pour les inputs qui échouée sur le test\r\n\t * @addErrorInput\r\n\t * @param {Object} input - l'élément DOM de l'input\r\n\t * @param {Object} apply - le status pour prendre la décision d'afficher le message d'erreur\r\n\t * @param {Object} message - le message d'erreur à afficher\r\n\t */\r\n\taddErrorInput(input, apply, message) {\r\n\t\tif( apply ) {\r\n\t\t\t$(input).addClass(\"error\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$(input).removeClass(\"error\");\r\n\t\t}\r\n\t\tif( this.inputErrorHTML !== null && typeof this.inputErrorHTML !== \"undefined\" ) {\r\n\t\t\tthis.inputErrorHTML.call(this, input, apply, message);\r\n\t\t}\r\n\t\treturn apply;\r\n\t}\r\n\t/**\r\n\t * Fonction interne qui joue le rôle d'afficher les messages d'erreur pour les inputs qui échouée sur le test\r\n\t * @inputErrorHTML\r\n\t * @param {Object} input - l'élément DOM de l'input\r\n\t * @param {Object} etat - le status pour prendre la décision d'afficher le message d'erreur\r\n\t * @param {Object} message - le message d'erreur à afficher\r\n\t */\r\n\tinputErrorHTML (input, etat, message) {\r\n\t\t$(input).parent().find('span.msg_error').remove();\r\n\t\tif( etat ) {\r\n\t\t\t$(input).parent().prepend('<span class=\"msg_error error\">'+message+'</span>');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction pour créer une carte maps Google Maps\r\n\t * @createMaps\r\n\t * @param {String} parent - l'ID de l'élément DOM de la carte\r\n\t * @param {Object} coordonnees - les coordonnées pour centrer la carte par défault\r\n\t * @param {Object} options - les options de la carte ( zoom, mapTypeId );\r\n\t */\r\n\tcreateMaps (parent, coordonnees, options) {\r\n\t\tvar self = this;\r\n\t\tif( typeof options === \"undefined\") {\r\n\t\t\toptions = {zoom: 5,mapTypeId: google.maps.MapTypeId.ROADMAP};\r\n\t\t}\r\n\t\twindow.onload = function(){\r\n\t\t\tif( typeof window.google === \"undefined\" ) {\r\n\t\t\t\tthis.log('Inclure ce script sur votre page : <script type=\"text/javascript\" src=\"http://maps.google.com/maps/api/js?sensor=false\"> </script>', 'error');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar cordonnees_lat_lng = new google.maps.LatLng(coordonnees.lat, coordonnees.lng);\r\n\t\t\t\tvar mapStyles = [{featureType: \"administrative.country\",stylers: [{ visibility: \"off\" }]}];\r\n\t\t    \tvar mapType = new google.maps.StyledMapType(mapStyles ,{name: \"Maroc\"});\r\n\t\t\t\toptions.center = cordonnees_lat_lng;\r\n\t\t\t\tself.maps = new google.maps.Map(document.getElementById(parent), options);\r\n\t\t\t\tself.maps.mapTypes.set('maroc', mapType );\r\n\t\t        self.maps.setMapTypeId('maroc');\r\n\t\t        var layer = new google.maps.FusionTablesLayer({\r\n\t\t                    query: {\r\n\t\t                select: 'geometry',\r\n\t\t                from: '1S4aLkBE5u_WS0WMVSchhBgMLdAARuPEjyW4rs20',\r\n\t\t                    where: \"col1 contains 'MAR'\"\r\n\t\t                },\r\n\t\t                styles: [{\r\n\t\t                    polylineOptions: {\r\n\t\t                        strokeColor: \"#333333\",\r\n\t\t                        strokeWeight: 2\r\n\t\t                    },\r\n\t\t                }],\r\n\t\t                suppressInfoWindows: true,\r\n\t\t        });\r\n\t\t        layer.setMap(self.maps);\r\n\t\t\t\t\r\n\t\t\t\tvar nbr_markers = self.markers.length;\r\n\t\t\t\tif( nbr_markers > 0 ) {\r\n\t\t\t\t\tfor( var i = 0; i < nbr_markers; i++ ) {\r\n\t\t\t\t\t\tvar marker_data = self.markers[i];\r\n\t\t\t\t\t\tvar marker = self.createMarker({ coordonnees : self.convertObjetCords(marker_data.coordonnees), title : marker_data.title, icon : marker_data.icon, index : i, id : marker_data.id  });\r\n\t\t\t\t\t}// boucle for\r\n\t\t\t\t}// if nbr_markers\r\n\t\t\t}// else\t\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * Fonction pour créer un marker\r\n\t * @createMarker\r\n\t * @param {String} selector - le selector de l'element DOM sur quoi l'event va se simuler\r\n\t * @param {String} event - le nom de l'événement\r\n\t */\r\n\tcreateMarker(objetMarker) {\r\n\t\tvar self = this;\r\n\t\tvar marker = new google.maps.Marker({\r\n\t\t    position: objetMarker.coordonnees,\r\n\t\t    map: self.maps,\r\n\t\t    title: objetMarker.title,\r\n\t\t\ticon : objetMarker.icon\r\n\t    });\r\n\t\tif (self.acceptInfoWindow) {\r\n\t\t\tvar infowindow = new google.maps.InfoWindow({\r\n\t\t    \tcontent: self.infosWindow[objetMarker.id]\r\n\t\t\t});\r\n\t\t\tmarker.addListener('click', function() {\r\n\t\t\t    infowindow.open(self.maps, marker);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn marker;\r\n\t}\r\n\t/**\r\n\t * Fonction pour convertir un objet to un objet Google.maps.LatLng\r\n\t * @convertObjetCords\r\n\t * @param {Object} coordonnees - l'object des coordonnées sous format : lat et lng\r\n\t */\r\n\tconvertObjetCords (coordonnees) {\r\n\t\treturn new google.maps.LatLng(coordonnees.lat, coordonnees.lng);\t\r\n\t}\r\n\t/**\r\n\t * Fonction pour convertir une adresse to un objet des cordonnées de Google\r\n\t * @convertAdressToCords\r\n\t * @param {String} address - l'adresse à convertir\r\n\t * @param {Function} callback - la fonction callback dés que l'adresse et converti\r\n\t */\r\n\tconvertAdressToCords (address, callback) {\r\n\t\tvar self = this;\r\n\t\tvar geocoder = new google.maps.Geocoder();\r\n\t\tgeocoder.geocode({'address': address}, function(results, status) {\r\n\t\t\t  if (status === \"OK\" && typeof callback !== \"undefined\") {\r\n\t\t\t\tcallback.call(self, results[0].geometry.location.toJSON(), results, status);\r\n\t\t\t  }\r\n\t\t});\t\r\n\t}\r\n\t/**\r\n\t * Fonction pour ajouter un marker à la carte\r\n\t * @addMarker\r\n\t * @param {Object} coordonnees - les coordonnees du marker\r\n\t * @param {String} title - le titre du marker\r\n\t * @param {URL} icon - l'icon du marker\r\n\t */\r\n\taddMarker (coordonnees, title, icon) {\r\n\t\tif( typeof icon === \"undefined\" ) {\r\n\t\t\ticon = null;\r\n\t\t}\r\n\t\tvar id_marker = this.generateID();\r\n\t\tthis.markers.push({ coordonnees : coordonnees, title : title, icon : icon, id  : id_marker });\r\n\t\treturn id_marker;\r\n\t}\r\n\t/**\r\n\t * Fonction pour ajouter un popup info window sur la carte maps\r\n\t * @addInfoWindow\r\n\t * @param {Object} content - les coordonnees du marker\r\n\t * @param {String} id - c'est l'id généré par la fonction addMarker pour identifier le marker\r\n\t */\r\n\taddInfoWindow(content, id) {\r\n\t\tif( typeof content !== \"undefined\" ) {\r\n\t\t\tthis.infosWindow[id] = content;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction pour rendrer une template JS sur la page\r\n\t * @renderTemplate\r\n\t * @param {Object} objetTemplate - des paramétres contient les propriétes suivantes : \"template, templateURL, data, parent\"\r\n\t */\r\n\trenderTemplate(objetTemplate) {\r\n\t\tvar template = objetTemplate.template;\r\n\t\tvar templateURL = objetTemplate.templateURL;\r\n\t\tvar data = objetTemplate.data;\r\n\t\tvar parent = objetTemplate.parent;\r\n\t\tvar self = this;\r\n\t\tif( typeof Handlebars !== \"undefined\" ) {\r\n\t\t\tif( typeof templateURL === \"undefined\" || templateURL === null || templateURL === \"\" ) {\r\n\t\t\t\tvar source = $(template).html();\r\n\t\t\t\tthis.render(source, data, parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$.get(templateURL, function(template) {\r\n\t\t\t\t\tself.render(template, data, parent);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.log(\"Merci d'ajouter le fichier Handlerbars.js sur votre page à partir de cette page : http://handlebarsjs.com/installation.html\", \"error\");\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fonction interne qui joue le rôle de compiler le code HTML avec les données et l'ajouter sur le parent\r\n\t * @render\r\n\t * @param {HTML} template - le code HTML de la template\r\n\t * @param {Object} data - les données à afficher\r\n\t * @param {DOM} parent - le parent DOM vers laquel les données seront afficher\r\n\t */\r\n\trender (template, data, parent) {\r\n\t\tvar template_compiled = Handlebars.compile(template);\r\n\t\tvar rendered = template_compiled(data);\r\n\t\t$(parent).html(rendered);\r\n\t}\r\n\t/**\r\n\t * Fonction pour get les données depuis le serveur par Ajax\r\n\t * @getData\r\n\t * @param {URL} url - l'url de la requette\r\n\t * @param {Function} callback - la fonction callback dés que la requette est en mode success\r\n\t */\r\n\tgetData (url, callback) {\r\n\t\tvar self = this;\r\n\t\t$.get(url, function(data) {\r\n\t\t\tif( typeof callback!== \"undefined\" ) {\r\n\t\t\t\tcallback.call(self, data, this);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * Fonction pour get les données depuis le serveur par Ajax\r\n\t * @fetch\r\n\t * @param {URL} url - l'url de la requette\r\n\t * @param {Function} callback - la fonction callback dés que la requette est en mode success\r\n\t * @param (Function) error_callback - la fonction callback dés que la requette est en mode Error\r\n\t */\r\n\tfetch(url, callback, error_callback) {\r\n\t\tthis.ajax(url, 'GET', null , callback, error_callback);\r\n\t}\r\n\t/**\r\n\t * Fonction pour get les données depuis le serveur par Ajax\r\n\t * @update\r\n\t * @param {URL} url - l'url de la requette\r\n\t * @param {Object} data - les données à mettre à jour\r\n\t * @param {Function} callback - la fonction callback dés que la requette est en mode success\r\n\t * @param (Function) error_callback - la fonction callback dés que la requette est en mode Error\r\n\t */\r\n\tupdate(url, data, callback, error_callback) {\r\n\t\tthis.ajax(url, 'PUT', data, callback, error_callback);\r\n\t}\r\n\t/**\r\n\t * Fonction pour get les données depuis le serveur par Ajax\r\n\t * @fetch\r\n\t * @param {URL} url - l'url de la requette\r\n\t * @param {Object} data - les données à poster au serveur\r\n\t * @param {Function} callback - la fonction callback dés que la requette est en mode success\r\n\t * @param (Function) error_callback - la fonction callback dés que la requette est en mode Error\r\n\t */\r\n\tpost(url, data,callback, error_callback) {\r\n\t\tthis.ajax(url, 'POST', data, callback, error_callback);\r\n\t}\r\n\t/**\r\n\t * Fonction pour get les données depuis le serveur par Ajax\r\n\t * @fetch\r\n\t * @param {URL} url_ajax - l'url de la requette\r\n\t * @param (String) type - Type de la requette Ajax\r\n\t * @param {Object} data - les données à transférer au serveur\r\n\t * @param {Function} callback - la fonction callback dés que la requette est en mode success\r\n\t * @param (Function) error_callback - la fonction callback dés que la requette est en mode Error\r\n\t */\r\n\tajax(url_ajax, type, data, callback, error_callback) {\r\n\t\tvar self = this;\r\n\t\tvar data_send = \"\";\r\n\t\tif(typeof data !== \"undefined\" && data !== null) {\r\n\t\t\tdata_send = JSON.stringify(data);\r\n\t\t}\r\n\t\t/*if( self.add_in_url.length > 0 ) {\r\n\t\t\tself.url_ajax = self.url_ajax+self.add_in_url;\r\n\t\t}*/\r\n\t\t$.ajax({\r\n\t\t\turl : url_ajax,\r\n\t\t\ttype : type,\r\n\t\t\tdata : data_send,\r\n\t\t\tcache: false,\r\n\t\t\t headers: { \r\n\t\t        'Accept': 'application/json',\r\n\t\t        'Content-Type': 'application/json' \r\n\t\t    },\r\n\t\t\tcontentType: false, // obligatoire pour de l'upload\r\n            processData: false,\r\n\t\t\tdataType: 'json',\r\n\t\t\tsuccess : function(data) {\r\n\t\t\t\tif( typeof callback  !== \"undefined\" && callback !== null ) {\r\n\t\t\t\t\tcallback.call(self, data, this);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror : function(error, xhr) {\r\n\t\t\t\tif( typeof error_callback  !== \"undefined\" && error_callback !== null  ) {\r\n\t\t\t\t\terror_callback.call(self, xhr, error, this);\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t  });\r\n\t}\r\n\t\r\n\tmessage (parent, message, type) {\r\n\t\tthis.log(parent+\",\"+message+\", \"+type);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * une fonction qui afficher la structure de la classe Utils\r\n\t * @help\r\n\t */\r\n\thelp() {\r\n\t\tthis.log(\"la liste des methodes est en cours de création\");\r\n\t}\r\n\r\n} // class Utils"]}